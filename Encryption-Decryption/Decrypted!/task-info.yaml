type: edu
custom_name: stage3
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "enc\n" +
                        "Welcome to hyperskill!\n" +
                        "5",
                    "\\jqhtrj%yt%m~ujwxpnqq&"),
                new SimpleTestCase(
                    "enc\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "enc\n" +
                        "012345678\n" +
                        "1",
                    "123456789"),
                new SimpleTestCase(
                    "dec\n" +
                        "\\jqhtrj%yt%m~ujwxpnqq&\n" +
                        "5",
                    "Welcome to hyperskill!"),
                new SimpleTestCase(
                    "dec\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "dec\n" +
                        "222233334444\n" +
                        "1",
                    "111122223333")
            );
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;
    import java.lang.StringBuffer;

    public class Main {
        public static void main(String[] args) {
            Scanner keyboard = new Scanner(System.in);
            String message = keyboard.next();
            int offset = keyboard.nextInt();
            StringBuffer newMessage = new StringBuffer("");

            for (int i = 0; i < message.length(); i++) {
                char x = message.charAt(i);
                if (x == ' ') {
                    newMessage.append(" ");
                } else {
                    if (x + offset > 'z') {
                        char rebound = (char) (x + offset - 26);
                        newMessage.append(Character.toString(rebound));
                    } else {
                        newMessage.append(Character.toString(x + offset));
                    }
                }


            }

    //abcdefghijklmnopqrstuvwxyz
    //zyxwvutsrqponmlkjihgfedcba
            message = "dv ulfmw z givzhfiv!";
            System.out.println(newMessage);
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/247/implement
status: Solved
record: 2
